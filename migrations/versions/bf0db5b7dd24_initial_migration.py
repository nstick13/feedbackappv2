"""Initial migration

Revision ID: bf0db5b7dd24
Revises: 
Create Date: 2024-11-14 21:57:05.206621

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bf0db5b7dd24'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('feedback_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('request_id', sa.String(length=36), nullable=True))
        batch_op.alter_column('requestor_id',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['request_id'])

    with op.batch_alter_table('feedback_session', schema=None) as batch_op:
        batch_op.alter_column('provider_id',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=100),
               existing_nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id_string',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=100),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)
        batch_op.alter_column('id_string',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)

    with op.batch_alter_table('feedback_session', schema=None) as batch_op:
        batch_op.alter_column('provider_id',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=64),
               existing_nullable=True)

    with op.batch_alter_table('feedback_request', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('requestor_id',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=64),
               existing_nullable=False)
        batch_op.drop_column('request_id')

    # ### end Alembic commands ###
